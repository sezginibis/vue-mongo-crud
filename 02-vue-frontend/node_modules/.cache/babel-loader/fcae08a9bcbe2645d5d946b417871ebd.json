{"ast":null,"code":"import PostTitle from '@/components/posts/PostTitle.vue';\nimport { onBeforeMount, reactive, ref } from 'vue';\nimport { useRoute } from 'vue-router';\nexport default {\n  name: 'PostEdit',\n\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const route = useRoute();\n    const post = reactive({\n      _id: '',\n      title: '',\n      description: ''\n    });\n    const title = ref('This is an post edit page');\n    onBeforeMount(async () => {\n      try {\n        await fetch('http://127.0.0.1:5000/post/' + route.params.id).then(response => response.json()).then(json => post._id = json._id);\n        await fetch('http://127.0.0.1:5000/post/' + route.params.id).then(response => response.json()).then(json => post.title = json.title);\n        await fetch('http://127.0.0.1:5000/post/' + route.params.id).then(response => response.json()).then(json => post.description = json.description);\n      } catch (error) {\n        console.log(error);\n      }\n    });\n\n    async function editSave() {\n      const data = {\n        title: post.title,\n        description: post.description\n      };\n      const requestOptions = {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      };\n      await fetch('http://127.0.0.1:5000/post-edit/' + route.params.id, requestOptions).then(response => {\n        response.json();\n        window.location.href = '/posts';\n      }).then(json => post.value = json);\n    }\n\n    const __returned__ = {\n      route,\n      post,\n      title,\n      editSave,\n      PostTitle,\n      onBeforeMount,\n      reactive,\n      ref,\n      useRoute\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n\n};","map":{"version":3,"mappings":"AACA,OAAOA,SAAP,MAAsB,kCAAtB;AACA,SAASC,aAAT,EAAwBC,QAAxB,EAAkCC,GAAlC,QAA6C,KAA7C;AACA,SAASC,QAAT,QAAyB,YAAzB;;;;;;;;IACA,MAAMC,KAAK,GAAGD,QAAQ,EAAtB;IAEA,MAAME,IAAI,GAAGJ,QAAQ,CAAC;MAClBK,GAAG,EAAE,EADa;MAElBC,KAAK,EAAE,EAFW;MAGlBC,WAAW,EAAE;IAHK,CAAD,CAArB;IAKA,MAAMD,KAAK,GAAGL,GAAG,CAAC,2BAAD,CAAjB;IAEAF,aAAa,CAAC,YAAY;MACtB,IAAI;QACA,MAAMS,KAAK,CAAC,gCAAgCL,KAAK,CAACM,MAAN,CAAaC,EAA9C,CAAL,CACDC,IADC,CACIC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADhB,EAEDF,IAFC,CAEIE,IAAI,IAAIT,IAAI,CAACC,GAAL,GAAWQ,IAAI,CAACR,GAF5B,CAAN;QAGA,MAAMG,KAAK,CAAC,gCAAgCL,KAAK,CAACM,MAAN,CAAaC,EAA9C,CAAL,CACDC,IADC,CACIC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADhB,EAEDF,IAFC,CAEIE,IAAI,IAAIT,IAAI,CAACE,KAAL,GAAaO,IAAI,CAACP,KAF9B,CAAN;QAGA,MAAME,KAAK,CAAC,gCAAgCL,KAAK,CAACM,MAAN,CAAaC,EAA9C,CAAL,CACDC,IADC,CACIC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADhB,EAEDF,IAFC,CAEIE,IAAI,IAAIT,IAAI,CAACG,WAAL,GAAmBM,IAAI,CAACN,WAFpC,CAAN;MAGH,CAVD,CAUE,OAAOO,KAAP,EAAc;QACZC,OAAO,CAACC,GAAR,CAAYF,KAAZ;MACH;IACJ,CAdY,CAAb;;IAkBA,eAAeG,QAAf,GAA0B;MACtB,MAAMC,IAAI,GAAG;QACTZ,KAAK,EAAEF,IAAI,CAACE,KADH;QAETC,WAAW,EAAEH,IAAI,CAACG;MAFT,CAAb;MAIA,MAAMY,cAAc,GAAG;QACnBC,MAAM,EAAE,KADW;QAEnBC,OAAO,EAAE;UAAE,gBAAgB;QAAlB,CAFU;QAGnBC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,IAAf;MAHa,CAAvB;MAKA,MAAMV,KAAK,CAAC,qCAAqCL,KAAK,CAACM,MAAN,CAAaC,EAAnD,EAAuDS,cAAvD,CAAL,CACDR,IADC,CACIC,QAAQ,IAAI;QACdA,QAAQ,CAACC,IAAT;QACAY,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,QAAvB;MACH,CAJC,EAKDhB,IALC,CAKIE,IAAI,IAAIT,IAAI,CAACwB,KAAL,GAAaf,IALzB,CAAN;IAMH","names":["PostTitle","onBeforeMount","reactive","ref","useRoute","route","post","_id","title","description","fetch","params","id","then","response","json","error","console","log","editSave","data","requestOptions","method","headers","body","JSON","stringify","window","location","href","value"],"sources":["C:/Users/Administrator/Desktop/test/vue-mongo-crud/02-vue-frontend/src/components/posts/PostEdit.vue"],"sourcesContent":["<script setup>\r\nimport PostTitle from '@/components/posts/PostTitle.vue';\r\nimport { onBeforeMount, reactive, ref } from 'vue';\r\nimport { useRoute } from 'vue-router'\r\nconst route = useRoute()\r\n\r\nconst post = reactive({\r\n    _id: '',\r\n    title: '',\r\n    description: ''\r\n});\r\nconst title = ref('This is an post edit page');\r\n\r\nonBeforeMount(async () => {\r\n    try {\r\n        await fetch('http://127.0.0.1:5000/post/' + route.params.id)\r\n            .then(response => response.json())\r\n            .then(json => post._id = json._id);\r\n        await fetch('http://127.0.0.1:5000/post/' + route.params.id)\r\n            .then(response => response.json())\r\n            .then(json => post.title = json.title);\r\n        await fetch('http://127.0.0.1:5000/post/' + route.params.id)\r\n            .then(response => response.json())\r\n            .then(json => post.description = json.description);\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n});\r\n\r\n\r\n\r\nasync function editSave() {\r\n    const data = {\r\n        title: post.title,\r\n        description: post.description\r\n    };\r\n    const requestOptions = {\r\n        method: 'PUT',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(data)\r\n    };\r\n    await fetch('http://127.0.0.1:5000/post-edit/' + route.params.id, requestOptions)\r\n        .then(response => {\r\n            response.json()\r\n            window.location.href = '/posts';\r\n        })\r\n        .then(json => post.value = json);\r\n}\r\n\r\n\r\n</script>\r\n\r\n<template>\r\n<div>\r\n    <PostTitle :title=\"title\" />\r\n        <!-- <form @submit.prevent=\"editSave(post._id, event)\"> DATA CHECK CONTROL AFTER -->\r\n            <div class=\"form-floating mt-3 mb-3\">\r\n                <input type=\"text\" class=\"form-control\" id=\"title\" placeholder=\"Post Title\" v-model=\"post.title\">\r\n                <label for=\"title\">Post Title</label>\r\n            </div>\r\n            <div class=\"form-floating\">\r\n                <textarea class=\"form-control\" placeholder=\"Post Description\" id=\"description\" style=\"height: 100px\"\r\n                    v-model=\"post.description\"></textarea>\r\n                <label for=\"description\">Post Description</label>\r\n                <div class=\"container\">\r\n                    <div class=\"row\">\r\n                        <div class=\"d-grid gap-2 mt-4\">\r\n                            <button class=\"btn btn-success\" type=\"button\" @click=\"editSave()\">Save the\r\n                                edit</button>\r\n                        </div>\r\n                        <div class=\"d-grid gap-2 mt-4\">\r\n                            <router-link to=\"/posts\" class=\"btn btn-warning\">Cancel</router-link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        <!-- </form> -->\r\n    </div>\r\n</template>\r\n"]},"metadata":{},"sourceType":"module"}